name: CICD pipeline
on:
  # push:
  #   branches: [ "dev" ]
  workflow_dispatch:

jobs:
  sonarqube-scan:
    name: SonarQube Scan (unit test & code_quality)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: npm install --prefix backend

      - name: Test and coverage
        run: npm test --prefix backend
        continue-on-error: true

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk-scan-FE:
    name: Snyk Scan FE (SCA & SAST)
    needs: sonarqube-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
            sparse-checkout: 'frontend'
            sparse-checkout-cone-mode: false

      - name: Move files to root
        run: |
          ls -lah
          shopt -s dotglob
          mv frontend/* .
          rm -rf frontend
          ls -lah

      - name: Run Snyk to check for vulnerabilities (SCA)
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
            command: test

      - name: Run Snyk to check for vulnerabilities (SAST)
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
            command: code test

  snyk-scan-BE:
    name: Snyk Scan BE (SCA & SAST)
    needs: sonarqube-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
            sparse-checkout: 'backend'
            sparse-checkout-cone-mode: false

      - name: Move files to root
        run: |
          ls -lah
          shopt -s dotglob
          mv backend/* .
          rm -rf backend
          ls -lah

      - name: Run Snyk to check for vulnerabilities (SCA)
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
            command: test

      - name: Run Snyk to check for vulnerabilities (SAST)
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
            command: code test